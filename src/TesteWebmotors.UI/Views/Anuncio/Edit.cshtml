@model TesteWebmotors.Domain.Models.Anuncio

<script>
    $(document).ready(function () {
        var marcas = JSON.parse('@Html.Raw(ViewBag.Marcas)');

        var modelos, versoes;


        $('#Marca').find('option').remove();
        $('#Marca').append($('<option>').html('Escolha...'));
        $.each(marcas, function (indice, marca) {
            $('#Marca').append($('<option>').val(marca.Id).html(marca.Name));
        });

            $('#Marca').attr('selectedIndex', -1);

        $('#Marca').on('change', function () {
            $.each(marcas, function (indice, marca) {
                if (marca.Id == $('#Marca').val()) {
                    $('#Modelo').find('option').remove();
                    $('#Modelo').append($('<option>').html('Escolha...'));
                    modelos = marca.CarModels;
                    $.each(modelos, function (indice, modelo) {
                        $('#Modelo').append($('<option>').val(modelo.Id).html(modelo.Name));
                    });

                    return;
                }
            });

                $('#Modelo').attr('selectedIndex', -1);
        });


        $('#Modelo').on('change', function () {
            $.each(modelos, function (indice, modelo) {
                if (modelo.Id == $('#Modelo').val()) {
                    $('#Versao').find('option').remove();
                    $('#Versao').append($('<option>').html('Escolha...'));
                    versoes = modelo.CarVersions;
                    $.each(versoes, function (indice, versao) {
                        $('#Versao').append($('<option>').val(versao.Id).html(versao.Name));
                    });

                    return;
                }
            });

            $('#Versao').attr('selectedIndex', -1);
        });
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Anúncio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <select name="Marca" id="Marca" class="custom-select">
                    <option></option>
                </select>

                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <select name="Modelo" id="Modelo" class="custom-select">
                    <option></option>
                </select>
            </div>

            @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Versao, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <select name="Versao" id="Versao" class="custom-select">
                    <option></option>
                </select>

                @Html.ValidationMessageFor(model => model.Versao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quilometragem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quilometragem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quilometragem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Atualizar anúncio" class="btn btn-dark" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
